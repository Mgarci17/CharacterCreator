# MyApp.py

import sys
from PyQt5 import QtCore, QtGui, uic, QtWidgets
from PyQt5.QtCore import QObject, pyqtSlot

qtCreatorFile = "CharacterBuilder.ui"  # Enter file here.

# Ui_MainWindow, QtBaseClass = uic.loadUiType(qtCreatorFile)


class MainWindowUIClass(QtWidgets.QMainWindow):

    proficiency = 2

    def __init__(self):
        """
            Initializes the super class
        """
        super(MainWindowUIClass, self).__init__()
        uic.loadUi(qtCreatorFile, self)
        self.athletics_rb = self.findChild(QtWidgets.QRadioButton, "athletics_radioButton")
        self.athletics_rb.clicked.connect(self.calculate_skill())
        self.acrobatics_rb = self.findChild(QtWidgets.QRadioButton, "acrobatics_radioButton")
        # https://nitratine.net/blog/post/how-to-import-a-pyqt5-ui-file-in-a-python-gui/

        self.show()

        # self.initUI()

    def initUI(self):
        pass

    def setup_ui(self, main_window):
        super().setupUi(main_window)
        # close the lower part of the splitter to hide the
        # debug window under normal operations
        self.splitter.setSizes([300, 0])
    '''
    Ui_MainWindow.__init__(self)
    self.setupUi(self)
    self.athletics_radioButton.clicked.connect(self.calculate_skill)
    self.acrobatics_radioButton.clicked.connect(self.calculate_skill)
    self.animal_handling_radioButton.clicked.connect(self.calculate_skill)
    self.arcana_radioButton.clicked.connect(self.calculate_skill)
    self.deception_radioButton.clicked.connect(self.calculate_skill)
    '''

    def calculate_skill(self):
        if self.athletics_radioButton.isChecked():
            self.athletics_lineEdit.setText("+{}".format(self.proficiency))
        else:
            self.athletics_lineEdit.setText("+{}".format(0))
        # end-if
        if self.acrobatics_radioButton.isChecked():
            self.acrobatics_lineEdit.setText("+{}".format(self.proficiency))
        else:
            self.acrobatics_lineEdit.setText("+{}".format(0))
        # end-if
        if self.animal_handling_radioButton.isChecked():
            self.animal_handling_lineEdit.setText("+{}".format(self.proficiency))
        else:
            self.animal_handling_lineEdit.setText("+{}".format(0))
        # end-if
        if self.arcaba_radioButton.isChecked():
            self.arcana_lineEdit.setText("+{}".format(self.proficiency))
        else:
            self.arcana_lineEdit.setText("+{}".format(0))
        # end-if


def main():
    """
        This is the MAIN ENTRY POINT of our application.  The code at the end
        of the mainwindow.py script will not be executed, since this script is now our main program.
        We have simply copied the code from mainwindow.py here
        since it was automatically generated by '''pyuic5'''.
    """
    app = QtWidgets.QApplication(sys.argv)
    app.setStyle('Fusion')
    ui = MainWindowUIClass()
    app.exec()
    sys.exit(app.exec_())


main()

